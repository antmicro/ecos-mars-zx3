// eCos memory layout

#include <pkgconf/hal.h>
#include <cyg/infra/cyg_type.inc>

MEMORY
{
    sram_l  : ORIGIN = 0x20000000 - CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE, LENGTH = CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE-CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE
    sram_u  : ORIGIN = 0x20000000, LENGTH = CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE
    flash : ORIGIN = 0x00000000, LENGTH = CYGHWR_HAL_KINETIS_FLASH_SIZE
}

SECTIONS
{
    SECTIONS_BEGIN
    SECTION_rom_vectors (sram_l, 0x20000000 - CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE, LMA_EQ_VMA)
    SECTION_RELOCS (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_text (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fini (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata1 (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fixup (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_gcc_except_table (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_eh_frame (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_got (sram_l, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_data (sram_u, 0x20000000  + 0x400, FOLLOWING (.got))
    SECTION_sram (sram_u, ALIGN (0x8), FOLLOWING (.data))
    SECTION_bss (sram_u, ALIGN (0x8), LMA_EQ_VMA)
    CYG_LABEL_DEFN(__heap1) = ALIGN (0x8);
    SECTIONS_END
}

hal_vsr_table = (0x20000000);
hal_virtual_vector_table = hal_vsr_table + 128*4;
hal_startup_stack = (0x20000000 + CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE);
