// eCos memory layout

#include <pkgconf/hal.h>
#include <cyg/infra/cyg_type.inc>

MEMORY
{
    sram  : ORIGIN = 0x20000000 - CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE, LENGTH = CYGHWR_HAL_KINETIS_SRAM_SIZE
    flash : ORIGIN = 0x00000000, LENGTH = CYGHWR_HAL_KINETIS_FLASH_SIZE
    ram   : ORIGIN = CYGHWR_HAL_KINETIS_FB_CS0_AR, LENGTH = CYGHWR_HAL_KINETIS_FB_CS0_SIZE-CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE
}

SECTIONS
{
    SECTIONS_BEGIN
    SECTION_sram (sram, 0x20000000 - CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE + 0x400 , LMA_EQ_VMA)
    SECTION_rom_vectors (ram, CYGHWR_HAL_KINETIS_FB_CS0_AR + 0x20000, LMA_EQ_VMA)
    SECTION_RELOCS (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_text (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fini (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata1 (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fixup (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_gcc_except_table (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_eh_frame (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_got (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_data (ram, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_bss (ram, ALIGN (0x8), LMA_EQ_VMA)
    CYG_LABEL_DEFN(__heap1) = ALIGN (0x8);
    SECTIONS_END
}

hal_vsr_table = (0x20000000 - CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE);
hal_virtual_vector_table = hal_vsr_table + 128*4;
hal_startup_stack = CYGHWR_HAL_KINETIS_FB_CS0_AR + CYGHWR_HAL_KINETIS_FB_CS0_SIZE;

